@page "/"
@inject CodeClient client;
@inject AppViewModel app;
@implements IDisposable
@rendermode InteractiveServer


<PageTitle>Classes</PageTitle>

<ul>

@foreach(var c in displayClasses) {
    <li>@c.Name</li>
}

</ul>

@code {
   
    private IEnumerable<Client.ClassModel> displayClasses = [];
    private IEnumerable<Client.ClassModel> classes = [];

    protected override async Task OnInitializedAsync() {
        app.GlobalSearchTextChanged += OnGlobalTextChanged;

        classes = await client.GetClassesAsync();

        displayClasses = Find(classes, app.GlobalSearchText);
    }

    private void OnGlobalTextChanged(object? sender, string? value) {
        displayClasses = Find(classes, value);
        this.StateHasChanged();
    }

    private IEnumerable<Client.ClassModel> Find(IEnumerable<Client.ClassModel> input, string? searchText) {
        if (searchText is null) {
            return input;
        }
        return classes.Where(x => x.Name.Contains(searchText));
    }

    public void Dispose() => Dispose(true);
    private void Dispose(bool disposing) {
        if (!disposing) {
            return;
        }
        app.GlobalSearchTextChanged -= OnGlobalTextChanged;
    }
}
