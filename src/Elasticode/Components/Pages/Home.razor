@page "/"
@inject CodeClient client;
@rendermode InteractiveServer

<PageTitle>Classes</PageTitle>

<input type="text" @oninput="(e) => OnSearchValueChanged(e.Value?.ToString())" />

<ul>

@foreach(var c in displayClasses) {
    <li>@c</li>
}
</ul>

@code {
    private IEnumerable<string> displayClasses = [];
    private IEnumerable<string> classes = [];
    
    protected override async Task OnInitializedAsync() {
        displayClasses = classes = await client.GetClassesAsync();
    }

    private void OnSearchValueChanged(string? searchValue) {
        if (searchValue is null) {
            displayClasses = classes;
            this.StateHasChanged();
            return;
        }

        displayClasses = classes.Where(x => x.Contains(searchValue));
        this.StateHasChanged();
    }
}
